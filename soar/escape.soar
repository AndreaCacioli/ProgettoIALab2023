# rl -s learning on # enable RL
# indifferent-selection --stats #to check parameters of reinforcement learning
# indifferent-selection -e 0.2 #20% deviation from greedy

################
## INITIALIZE ##
################
sp { initialize*escape
    (state <s> ^superstate nil -^name)
-->
    (<s> ^operator <o> +)
    (<o> ^name initialize)
}

sp { apply*initialize
    (state <s> ^operator <o>)
    (<o> ^name initialize)
-->
    (<s> 
        ^name escapeGame
        ^hasLogs false
        ^logsPosition est
        ^position nord
        ^windowPosition nord
        ^window intact 
        ^escaped false 
        ^hasSling false
        ^lastAction <lastAction>
    )
    (<lastAction> ^name noAction ^reward 0)
}

##################
## CREATE SLING ##
##################
sp { propose*combine*spring*and*twig
    (state <s> 
        ^name escapeGame
        ^hasSling false
        ^window intact
        ^lastAction <lastAction>
    )
     (<lastAction>  ^name <> combineSpringTwig)
-->
    (<s> ^operator <o> +)
    (<o> ^name make-sling) 
}

sp { apply*combine*spring*and*twig
    (state <s> ^operator <op> ^lastAction <l>)
    (<op> ^name make-sling)
-->
    (<s> ^hasSling true + false -)
    (<s> ^lastAction <l> - <lastAction> +)
    (<lastAction> ^name combineSpringTwig ^reward 1)
    (write |CREATED SLING| (crlf) )
}

############################
## COMBINE PEBBLES-TWIGS  ##
############################
sp { propose*combine*pebbles*and*twig
    (state <s> 
        ^name escapeGame
        ^hasSling false
        ^window intact
        ^lastAction <lastAction>
    )
    (<lastAction> ^name <> combinePebblesTwig )
-->
    (<s> ^operator <o> +)
    (<o> ^name combine-pebbles-twig) 
}

sp { apply*combine*pebbles*and*twig
    (state <s> ^operator <op> ^lastAction <l>)
    (<op> ^name combine-pebbles-twig)
-->
    (<s> ^lastAction <l> - <lastAction> +)
    (<lastAction> ^name combinePebblesTwig ^reward -1)
    (write |NOTHING HAPPENED| (crlf) )
}

#############################
## COMBINE PEBBLES-SPRING  ##
#############################
sp { propose*combine*pebbles*and*spring
    (state <s> 
        ^name escapeGame
        ^hasSling false
        ^window intact
        ^lastAction <lastAction>
    )
    (<lastAction> ^name <> combinePebblesSpring )
-->
    (<s> ^operator <o> +)
    (<o> ^name combine-pebbles-spring) 
}

sp { apply*combine*pebbles*and*spring
    (state <s> ^operator <op> ^lastAction <l>)
    (<op> ^name combine-pebbles-spring)
-->
    (<s> ^lastAction <l> - <lastAction> +)
    (<lastAction> ^name combinePebblesSpring ^reward -1)
    (write |NOTHING HAPPENED| (crlf) )
}

###############
## SHOOTING  ##
###############
sp { propose*shoot*corner
    (state <s> 
        ^name escapeGame 
        ^hasSling true 
        ^window intact 
        ^lastAction <lastAction>
    )
    (<lastAction> ^name <> shootCorner)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot*corner)
}

sp { apply*shoot*corner
    (state <s> ^operator <o> ^lastAction <l>)
    (<o> ^name shoot*corner)
-->
    (write |The shot BROKE the window| (crlf) )
    (<s> ^lastAction <l> - <lastAction> +)
    (<lastAction> ^name shootCorner ^reward 1)
    (<s> ^window intact - broken +)
}

sp { propose*shoot*center
    (state <s> 
        ^name escapeGame 
        ^hasSling true 
        ^window intact 
        ^lastAction <lastAction>
    )
    (<lastAction> ^name <> shootCenter)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot*center)
}

sp { apply*shoot*center
    (state <s> ^operator <o> ^lastAction <l>)
    (<o> ^name shoot*center)
-->
    (<s> ^lastAction <l> - <lastAction> +)
    (<lastAction> ^name shootCenter ^reward -1)
    (write |The shot DID NOT AFFECT the window| (crlf) )
}

############################
## REINFORCEMENT LEARNING ##
############################
sp { RLinit*combine*spring*and*twig
    (state <s> ^name escapeGame ^operator <o> +)
    (<o> ^name make-sling) 
-->
    (<s> ^operator <o> = 0)
}

sp { RLinit*combine*pebbles*and*twig
    (state <s> ^name escapeGame ^operator <o> +)
    (<o> ^name combine-pebbles-twig) 
-->
    (<s> ^operator <o> = 0)
}

sp { RLinit*combine*pebbles*and*spring
    (state <s> ^name escapeGame ^operator <o> +)
    (<o> ^name combine-pebbles-spring) 
-->
    (<s> ^operator <o> = 0)
}

sp { RLinit*shoot*corner
    (state <s> ^name escapeGame ^operator <o> +)
    (<o> ^name shoot*corner) 
-->
    (<s> ^operator <o> = 0)
}

sp { RLinit*shoot*center
    (state <s> ^name escapeGame ^operator <o> +)
    (<o> ^name shoot*center) 
-->
    (<s> ^operator <o> = 0)
}

## 
# Apply rewards
##
sp { apply*rewards*to*reward*link
    (state <s> ^name escapeGame ^reward-link <rl> ^lastAction <lastAction>)
    (<lastAction> ^reward <r>)
-->
    (<rl> ^reward <re>)
    (<re> ^value <r>)
    (write (crlf) |APPLIED A REWARD OF | <r> (crlf) )
}

##############
## MOVEMENT ##
##############

sp { propose*movement*nord
    (state <s> ^position <> nord ^lastAction <lastAction>)
    (<lastAction> ^name <> moveNord)
-->
    (<s> ^operator <o> +)
    (<o> ^name move*nord ^result nord)
}

sp { apply*movement*nord
    (state <s> ^operator <o> ^position <p> ^lastAction <l>)
    (<o> ^name move*nord)
-->
    (write |MOVED NORD| (crlf) )
    (^lastAction <l> - <lastAction> +)
    (<lastAction> ^name moveNord)
    (<s> ^position <p> - nord +)
}

sp { propose*movement*sud
    (state <s> ^position <> sud ^lastAction <lastAction>)
    (<lastAction> ^name <> moveSud)
-->
    (<s> ^operator <o> +)
    (<o> ^name move*sud ^resutl sud)
}

sp { apply*movement*sud
    (state <s> ^operator <o> ^position <p> ^lastAction <l>)
    (<o> ^name move*sud)
-->
    (write |MOVED sud| (crlf) )
    (^lastAction <l> - <lastAction> +)
    (<lastAction> ^name moveSud)
    (<s> ^position <p> - sud +)
}

sp { propose*movement*est
    (state <s> ^position <> est ^lastAction <lastAction>)
    (<lastAction> ^name <> moveEst)
-->
    (<s> ^operator <o> +)
    (<o> ^name move*est ^result est)
}

sp { apply*movement*est
    (state <s> ^operator <o> ^position <p> ^lastAction <l>)
    (<o> ^name move*est)
-->
    (write |MOVED est| (crlf) )
    (^lastAction <l> - <lastAction> +)
    (<lastAction> ^name moveEst)
    (<s> ^position <p> - est +)
}

sp { propose*movement*ovest
    (state <s> ^position <> ovest ^lastAction <lastAction>)
    (<lastAction> ^name <> moveOvest)
-->
    (<s> ^operator <o> +)
    (<o> ^name move*ovest ^result ovest)
}

sp { apply*movement*ovest
    (state <s> ^operator <o> ^position <p> ^lastAction <l>)
    (<o> ^name move*ovest)
-->
    (write |MOVED ovest| (crlf) )
    (^lastAction <l> - <lastAction> +)
    (<lastAction> ^name moveOvest)
    (<s> ^position <p> - ovest +)
}

sp { movement*priority*logs
    (state <s> ^operator <o> ^hasLogs false ^logsPosition <logsPos>)
    (<o> ^result <r> = <logsPos>)
-->
    (<s> ^operator <o> >)
}

sp { movement*priority*window
    (state <s> ^operator <o> ^hasLogs true ^windowPosition <winPos>)
    (<o> ^result <r> = <winPos>)
-->
    (<s> ^operator <o> >)
}

##################
## PICK UP LOGS ##
##################
sp { propose*pick*up*logs
    (state <s> ^hasLogs false ^position <pos> ^logsPos <pos> ^lastAction <lastAction>)
    (<lastAction> <> pickUpLogs)
-->
    (<s> ^operator <o> +)
    (<o> ^name pick*up*logs)
}

sp { apply*pick*up*logs
    (state <s> ^operator <o> ^lastAction <l>)
    (<o> ^name pick*up*logs)
-->
    (write |Picked Up Logs| (crlf) )
    (^lastAction <l> - <lastAction> +)
    (<lastAction> ^name pickUpLogs)
    (<s> ^hasLogs false - true +)
}


###############
## TERMINATE ##
###############
sp { terminate
    (state <s> 
        ^name escapeGame
        ^escaped true
    )
-->
    (write |FINISH| (crlf) )
    (halt)
}